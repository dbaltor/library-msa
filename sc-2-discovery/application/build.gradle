buildscript {
	repositories { 
		mavenCentral()
	}
	dependencies { 
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

application {
    mainClassName = 'library.LibraryApplication'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		// required by spring-cloud-services-starter-*
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${cloudServicesDependencies}"

	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//Required to connect to PCF Service Registry.
	implementation 'io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry'
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-okhttp'
	implementation 'io.github.resilience4j:resilience4j-spring-boot2'
    //implementation('io.github.resilience4j:resilience4j-all') 
	// required due to https://github.com/resilience4j/resilience4j/issues/1151
	implementation 'io.github.resilience4j:resilience4j-circuitbreaker'
	implementation 'io.github.resilience4j:resilience4j-timelimiter'
	//implementation 'org.springframework.boot:spring-boot-starter-aop' // required by resilience4j
	////implementation "io.micrometer:micrometer-registry-prometheus" // may be used by resilience4j"
	
    test {
  		useJUnitPlatform()
	}
	testImplementation 'junit:junit:4.13'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// testImplementation 'com.github.javafaker:javafaker:1.0.2'
	// https://github.com/DiUS/java-faker/issues/327
	testImplementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'org.yaml' }
	testImplementation group: 'org.yaml', name: 'snakeyaml', version: '1.26'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}
